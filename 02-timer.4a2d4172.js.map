{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,4BAOA,SAASC,EAAUC,GAEjB,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,CAAEE,KARIC,KAAKC,MAAMP,EAAKI,GAQdI,MANDF,KAAKC,MAAMP,EAAMI,EAAOD,GAMhBM,QAJNH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,GAIlBS,QAFfJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZnC,MAiBjBU,QAAQC,IAAIb,EAAU,MACtBY,QAAQC,IAAIb,EAAU,OACtBY,QAAQC,IAAIb,EAAU,SAEtB,IAAMc,EAAO,IAAIC,KACXC,EAAQC,SAASC,cAAc,oBAC/BC,EAAQF,SAASC,cAAc,UAC/BE,EAAWH,SAASC,cAAc,eAClCG,EAAYJ,SAASC,cAAc,gBACnCI,EAAcL,SAASC,cAAc,kBACrCK,EAAcN,SAASC,cAAc,kBAErCM,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIZ,KACjBa,gBAAiB,EACjBC,QAAA,SAAQC,GACFC,EAAWD,cAAc,GAAKhB,EAChCK,EAAMa,UAAW,GAEjBb,EAAMa,UAAW,EACjBC,EAAAnC,GAASoC,OAAOC,QACd,2DACA,CAAEC,SAAU,gBAAiBC,aAAa,OAM5CN,GAAa,EAAAO,EAAAC,SAAUvB,EAAOQ,GAC9BgB,EAAQ,CACZC,WAAY,KACZC,UAAU,EACVC,MAAA,W,WACMC,KAAKF,WAGTE,KAAKF,UAAW,EAEhBE,KAAKH,WAAaI,aAAY,WAC5B,IAAMC,EAAc/B,KAAKgC,MAAMhB,EAAWD,cAAc,IAAMf,KAAKiC,MAEnE,GAAIF,EAAc,EAAG,CACnB,IAA0CG,EAAAjD,EAAU8C,GAA5CxC,EAAkC2C,EAAlC3C,KAAMG,EAA4BwC,EAA5BxC,MAAOC,EAAqBuC,EAArBvC,QAASC,EAAYsC,EAAZtC,QAE9BU,EAAU6B,YAAc,GAASC,OAAN1C,GAC3BW,EAAS8B,YAAc,GAAQC,OAAL7C,GAC1BgB,EAAY4B,YAAc,GAAWC,OAARzC,GAC7Ba,EAAY2B,YAAc,GAAWC,OAARxC,QAE7ByC,OAAOC,MAAM,kBACbD,OAAOE,SAASC,SAChBC,cAAcC,EAAKhB,cAEpB,QAIPtB,EAAMuC,aAAa,YAAY,GAC/BvC,EAAMwC,iBAAiB,SAEvB,WACExC,EAAMuC,aAAa,YAAY,GAC/B1C,EAAM0C,aAAa,YAAY,GAC/BlB,EAAMG,W","sources":["src/js/02-timer.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst date = new Date();\nconst input = document.querySelector('#datetime-picker');\nconst start = document.querySelector('button');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectDate.selectedDates[0] > date) {\n      start.disabled = false;\n    } else {\n      start.disabled = true;\n      Notiflix.Notify.failure(\n        'Вибраний час вже в минулому. Введіть дату з майбутнього!',\n        { position: 'center-center', backoverlay: true }\n      );\n    }\n  },\n};\n\nconst selectDate = flatpickr(input, options);\nconst timer = {\n  intervalId: null,\n  isActive: false,\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const reverseTime = Date.parse(selectDate.selectedDates[0]) - Date.now();\n\n      if (reverseTime > 0) {\n        const { days, hours, minutes, seconds } = convertMs(reverseTime);\n\n        dataHours.textContent = `${hours}`;\n        dataDays.textContent = `${days}`;\n        dataMinutes.textContent = `${minutes}`;\n        dataSeconds.textContent = `${seconds}`;\n      } else {\n        window.alert('The time is up');\n        window.location.reload();\n        clearInterval(this.intervalId);\n      }\n    }, 1000);\n  },\n};\n\nstart.setAttribute('disabled', true);\nstart.addEventListener('click', onStartBtn);\n\nfunction onStartBtn() {\n  start.setAttribute('disabled', true);\n  input.setAttribute('disabled', true);\n  timer.start();\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["$iU1Pc","parcelRequire","$84b9dae4df53835d$var$convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","console","log","$84b9dae4df53835d$var$date","Date","$84b9dae4df53835d$var$input","document","querySelector","$84b9dae4df53835d$var$start","$84b9dae4df53835d$var$dataDays","$84b9dae4df53835d$var$dataHours","$84b9dae4df53835d$var$dataMinutes","$84b9dae4df53835d$var$dataSeconds","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$84b9dae4df53835d$var$selectDate","disabled","$parcel$interopDefault","Notify","failure","position","backoverlay","$dbdyf","default","$84b9dae4df53835d$var$timer","intervalId","isActive","start","this","setInterval","reverseTime","parse","now","ref","textContent","concat","window","alert","location","reload","clearInterval","_this","setAttribute","addEventListener"],"version":3,"file":"02-timer.4a2d4172.js.map"}